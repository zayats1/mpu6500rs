[package]
# TODO(1) fix `authors` and `name` if you didn't use `cargo-generate`
authors = ["zayats1 <zaiats.bogdan@gmail.com>"]
name = "mpu6500test"
edition = "2024"
version = "0.1.0"


[dependencies]
semihosting = "0.1.20"
cortex-m = { version = "0.7.7", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7.5"
embedded-hal = { version = "1.0.0" }

num-traits = { version = "0.2.19", default-features = false, features = [
    "libm",
] }
panic-probe = { version = "1.0.0", features = ["print-defmt"] }
embassy-stm32 = { version = "0.4.0", features = [
    "stm32l476rg",
    "defmt",
    "time-driver-any",
    "memory-x",
    "exti",
] }
defmt = "1.0.1"
defmt-rtt = "1.0.0"
embassy-time = { version = "0.5.0", features = [
    "defmt",
    "defmt-timestamp-uptime",
] }
embassy-executor = { version = "0.9.1", features = [
    "arch-cortex-m",
    "executor-thread",
    "executor-interrupt",
    "defmt",
] }
embassy-embedded-hal = { version = "0.5.0", features = ["defmt"] }
embassy-futures = { version = "0.1.2", features = ["defmt"] }
embassy-sync = { version = "0.7.2", features = ["defmt"] }
libm = "0.2.15"
embedded-hal-async = "1.0.0"
hcsr04_async = "0.4.0"
heapless = "0.9.1"
mpu6500rs = {path="../../"}
nalgebra-glm = {version = "0.20.0", default-features = false}
# TODO(4) enter your HAL here
# some-hal = "1.2.3"

[dev-dependencies]
defmt-test = "0.4.0"

# cargo build/run
[profile.dev]
# default is opt-level = '0', but that makes very
# verbose machine code
opt-level = 0
# trade compile speed for slightly better optimisations
codegen-units = 8

# cargo build/run --release
[profile.release]
# default is opt-level = '3', but that makes quite
# verbose machine code
opt-level = 's'
# trade compile speed for slightly better optimisations
codegen-units = 1
# Use Link Time Optimisations to further inline things across
# crates
lto = 'fat'
# Leave the debug symbols in (default is no debug info)
debug = 2
